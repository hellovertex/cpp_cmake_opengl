4. write powershell scripts to configure, build, run and test on windows
5. Use CPack to generate .deb and .msi
6. create installable glfw example


Later:
- learn glfw read docs or if lazy start with https://www.youtube.com/watch?v=XH82zuPSPkI
- write .sh scripts to work with toolchain file using args

## WINDOWS ##
- need to configure via cmake -S . -B out/build_windows
- build from .sln file app + tests separately
-


# Adding a new class:

1. Create .h file
1.1 add to `target_include_directories`
1.2 add #include "myheader.h" to main.cc and tests_...
2. Create .cpp / .cc file
2.1 add to `add_executable`
3. add namespace inside .h and .cc files
3.1 call MyNamespace::function


# Adding gtest

1. Add Gtest setup cmake shenanigans
2. write test_dispatcher.cpp which sets Test(glfwTest, ...) and #include <gtest/gtest.h>
3. in cmakelists.txt write include(GoogleTest) \n gtest_discover_tests(glfwTest)
    which automagically detects test

# when to we have to write a user defined copy constructor?
- rule of five prior to C++11
- now always use smart pointers unless writing generic classes,
  in which case fallback to rule of five
